#!/bin/bash

# Without a DISPLAY, we just get "Unable to init server: Could not connect:
# Connection refused".
[ -n "$DISPLAY" ] || export DISPLAY="$(getDefaultDisplay 2>/dev/null)"

# Source: https://askubuntu.com/a/584692/72217
readonly pythonHeader='
from gi import require_version
require_version("Gdk", "3.0")
from gi.repository import Gdk
'
readonly pythonPrimary="$pythonHeader"'
require_version("Gtk", "3.0")
from gi.repository import Gtk
if Gtk.get_major_version() == 3 and Gtk.get_minor_version() >= 22:
    display = Gdk.Display.get_default()
    geo = display.get_primary_monitor().get_geometry()
else:
    screen=Gdk.Screen.get_default()
    geo = screen.get_monitor_geometry(screen.get_primary_monitor())
print(geo.width, " ", geo.height)
'
readonly pythonEach="$pythonHeader"'
display = Gdk.Display.get_default()
n_monitors = display.get_n_monitors()
for m in range(n_monitors):
  monitor = display.get_monitor(m)
  geometry = monitor.get_geometry()
  print(geometry.width, " ", geometry.height)
'
readonly pythonAll="$pythonHeader"'
require_version("Gtk", "3.0")
from gi.repository import Gtk
if Gtk.get_major_version() == 3 and Gtk.get_minor_version() >= 22:
  display = Gdk.Display.get_default()
  mon_geoms = [
      display.get_monitor(i).get_geometry()
      for i in range(display.get_n_monitors())
  ]
  x0 = min(r.x            for r in mon_geoms)
  y0 = min(r.y            for r in mon_geoms)
  x1 = max(r.x + r.width  for r in mon_geoms)
  y1 = max(r.y + r.height for r in mon_geoms)

  print(x1 - x0, " ", y1 - y0)
else:
  screen = Gdk.Screen.get_default()
  print(screen.get_width(), " ", screen.get_height())
'

printUsage()
{
    cat <<HELPTEXT
Get the display resolution of the entire (multi-monitor) display / the primary
display / each monitor.
HELPTEXT
    echo
    printf "Usage: < <(%q %s) IFS=' ' read -r xres yres\\n" "$(basename "$1")" '[--primary|--each] [-?|-h|--help]'
}
pythonProgram="$pythonAll"
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --primary)		shift
			if [[ "$INIT_DISPLAYSIZE" =~ ^[[:digit:]]+x[[:digit:]]+$ ]]; then
			    # Prefer externally (i.e. through SSH client) passed
			    # client display size.
			    printf '%s\n' "${INIT_DISPLAYSIZE//x/ }"
			    exit 0
			fi
			pythonProgram="$pythonPrimary"
			;;
    --each)		shift; pythonProgram="$pythonEach";;
esac
exec python3 -c "$pythonProgram"
