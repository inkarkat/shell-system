#!/bin/bash
# Source: https://ostechnix.com/check-linux-system-physical-virtual-machine/
# Source: https://unix.stackexchange.com/questions/3685/find-out-if-the-os-is-running-in-a-virtual-environment
# Source: https://unix.stackexchange.com/questions/89714/easy-way-to-determine-the-virtualization-technology-of-a-linux-machine

printUsage()
{
    cat <<HELPTEXT
Tests whether the current system is virtualized; i.e. inside a VM or container.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac
if [ $# -ne 0 ]; then
    printUsage "$0" >&2
    exit 2
fi

type -t systemd-detect-virt >/dev/null && \
    exec systemd-detect-virt --quiet

if type -t imvirt >/dev/null; then
    # imvirt either prints "Physical" or the virtualization technology.
    # It does not necessarily need administrative rights.
    if result="$(imvirt)" && [ -n "$result" ]; then
	[ "$result" = 'Physical' ] && exit 1 || exit 0
    fi
fi

SUDO=guiSudo; [ $EUID -eq 0 ] && SUDO=''

if type -t virt-what >/dev/null; then
    # virt-what either prints nothing or virtualization information.
    if result="$(memoizeCall --successful-only -- $SUDO virt-what)"; then
	[ -n "$result" ] && exit 0 || exit 1
    fi
fi

{ dmesg --notime 2>/dev/null || memoizeCall --successful-only -- $SUDO dmesg --notime 2>/dev/null; } | grep --quiet 'Hypervisor detected' && exit 0

exit 3
